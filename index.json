[{"authors":null,"categories":null,"content":"I am an assistant professor at the Department of Computer Science and Engineering, IIT Hyderabad. Prior to joining IIT Hyderabad, I was a Postdoctoral Scholar at Department of Computer Science, McCormick School of Engineering, Northwestern University, USA.\nI completed my PhD from Department of Computer Science and Engineering, Indian Institute of Technology Kanpur, advised by Sandeep Kumar Shukla at IIT Kanpur and Biswabandan Panda at IIT Bombay. My research interests include cybersecurity, Android security, malware analysis and cyber forensics.\nBefore joining IIT Kanpur, I served as an Assistant Programmer with the Central Bureau of Investigation, India. In CBI, my work revolved around Cybercrime and Cyber Forensics along with the management of information technology related activities of the Department.\n Download my resumé. -- ","date":1750291200,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1750291200,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"I am an assistant professor at the Department of Computer Science and Engineering, IIT Hyderabad. Prior to joining IIT Hyderabad, I was a Postdoctoral Scholar at Department of Computer Science, McCormick School of Engineering, Northwestern University, USA.","tags":null,"title":"Saurabh Kumar","type":"authors"},{"authors":["Saurabh Kumar","Cristian Molinaro","Lirika Sola","V.S. Subrahmanian"],"categories":[],"content":"","date":1750291200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1750291200,"objectID":"6c8a50071bf08221579a2f6d884053e0","permalink":"https://skmtr1.github.io/publication/glamp/","publishdate":"2025-06-19T10:58:33+05:30","relpermalink":"/publication/glamp/","section":"publication","summary":"We propose a novel Generative Malware Defense strategy. When an antivirus company detects a malware sample m, they should: (i) generate a set Var(m) of several variants of m and then (ii) train their malware classifiers on their usual training set augmented with Var(m). We believe this leads to a more proactive defense by making the classifiers more robust to future malware developed by the attacker. We formally define the malware generation problem as a non-traditional optimization problem. Our novel GLAMP (Generative Learning for Adversarially-robust Malware Prediction) framework analyzes the complexity of the malware generation problem and includes novel malware variant generation algorithms for (i) that leverage the complexity results. Our experiments show that a sufficiently large percentage of samples generated by GLAMP are able to evade both commercial anti-virus and machine learning classifiers with evasion rates up to 83.81% and 50.54%, respectively. GLAMP then proposes an adversarial training model as well. Our experiments show that GLAMP generates running malware that can evade 11 white box classifiers and 4 commercial (i.e., black box) detectors. Our experiments show GLAMP’s best adversarial training engine improves the recall by 16.1% and the F1 score by 2.4%-5.4% depending on the test set used.","tags":[],"title":"GLAMP: Generative Learning for Adversarially-Robust Malware Prediction","type":"publication"},{"authors":["Saurabh Kumar","Valerio La Gatta","Andrea Pugliese","ndrew Pulver","V.S. Subrahmanian","Jiazhi Zhang","Youzhi Zhang"],"categories":[],"content":"","date":1737331200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1737331200,"objectID":"0e2d2875dbc934fb7313a6a4ab28ce3d","permalink":"https://skmtr1.github.io/publication/botfarm/","publishdate":"2025-01-20T10:58:33+05:30","relpermalink":"/publication/botfarm/","section":"publication","summary":"How might reinforcement-learning based covert social influence operations (CSIOs) be run, given that the CSIO agent wants to maximize influence and minimize discoverability of malicious accounts? And how successful can they be, given that both social platform bot detectors and humans might report them to the social platform?  To answer these questions, we propose RL_CSIO, an RL-based methodology for running CSIOs and run 4 CSIOs with IRB-approval over a period of 5 days using a panel of 225 human subjects. We explore 8 research questions based on the data collected. The results show that RL_CSIO agents successfully trade off influence and discoverability - but in ways that are nuanced and unexpected.","tags":[],"title":"Reinforcement-Learning Based Covert Social Influence Operations","type":"publication"},{"authors":["Chavhan Sujeet Yashavant","Mitrajsinh Chavda","Saurabh Kumar","Amey Karkare","Angshuman Karmakar"],"categories":[],"content":"","date":1736746113,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1736746113,"objectID":"b0404a89deb69be639a9441ad7a3b09b","permalink":"https://skmtr1.github.io/publication/scrubd/","publishdate":"2025-01-13T10:58:33+05:30","relpermalink":"/publication/scrubd/","section":"publication","summary":"Smart Contracts (SCs) handle transactions in the Ethereum blockchain worth millions of United States dollars, making them a lucrative target for attackers seeking to exploit vulnerabilities and steal funds. The Ethereum community has developed a rich set of tools to detect vulnerabilities in SCs, including reentrancy (RE) and unhandled exceptions (UX). A dataset of SCs labelled with vulnerabilities is needed to evaluate the tools' efficacy. Existing SC datasets with labelled vulnerabilities have limitations, such as covering only a limited range of vulnerability scenarios and containing incorrect labels. As a result, there is a lack of a standardized dataset to compare the performances of these tools. SCRUBD aims to fill this gap. We present a dataset of real-world SCs and synthesized SCs labelled with RE and UX. The real-world SC dataset is labeled through crowdsourcing, followed by manual inspection by an expert, and covers both RE and UX vulnerabilities. On the other hand, the synthesized dataset is carefully crafted to cover various RE scenarios only. Using SCRUBD, we compared the performance of six popular vulnerability detection tools. Based on our study, we found that Slither outperforms other tools on a crowdsourced dataset in detecting RE vulnerabilities, while Sailfish outperforms other tools on a manually synthesized dataset for detecting RE. For UX vulnerabilities, Slither outperforms all other tools.","tags":[],"title":"SCRUBD: Smart Contracts Reentrancy and Unhandled Exceptions Vulnerability Datase","type":"publication"},{"authors":["Pier Paolo Tricomi","Saurabh Kumar","Mauro Conti","V.S. Subrahmanian"],"categories":[],"content":"","date":1711929600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1711929600,"objectID":"250ed54f4d6220f311a5aaed4ba59c1e","permalink":"https://skmtr1.github.io/publication/tiktok/","publishdate":"2024-04-01T10:58:33+05:30","relpermalink":"/publication/tiktok/","section":"publication","summary":"Corporate social media analysts break influencers into five tiers of increasing importance: Nano, Micro, Mid, Macro, and Mega. We perform a comprehensive study of TikTok influencers with two goals: (i) what factors distinguish influencers in each of these tiers from the adjacent tier(s)? (ii) of the features influencers can directly control (\u0026quot;actionable\u0026quot; features), which ones are most impactful to reach the next tier? We build and release a novel TikTok dataset featuring over 230K videos from 5000 influencers---1000 from each tier. The dataset includes video details such as likes, facial action units, emotions, and music information derived from Spotify. Access to the videos is facilitated through provided URLs and hydration code. To find the most important features that distinguish influencers in a tier from those in the next tier up, we thoroughly analyze traditional features (e.g., profile information) and text, audio, and video features using statistical methods and ablation testing. Our classifiers achieve F1-scores over 80%. The most impactful actionable features are traditional and video features, including enhancing video pleasure, quality, and emphasizing facial expressions. Finally, we collect and release a YouTube Shorts dataset to conduct a comparative analysis, aiming to identify similarities and differences between the two platforms.","tags":[],"title":"Climbing the Influence Tiers on TikTok: A Multimodal Study","type":"publication"},{"authors":["Vikas Maurya","Rachit Agarwal","Saurabh Kumar","Sandeep Kumar Shukla"],"categories":[],"content":"","date":1683072000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1683072000,"objectID":"b7933a01b368f5ca25d83cd73b4476bf","permalink":"https://skmtr1.github.io/publication/epasad/","publishdate":"2023-05-03T10:58:33+05:30","relpermalink":"/publication/epasad/","section":"publication","summary":"Due to the importance of Critical Infrastructure (CI) in a nation’s economy, they have been lucrative targets for cyber attackers. These critical infrastructures are usually Cyber-Physical Systems such as power grids, water, and sewage treatment facilities, oil and gas pipelines, etc. In recent times, these systems have suffered from cyber attacks numerous times. Researchers have been developing cyber security solutions for CIs to avoid lasting damages. According to standard frameworks, cyber security based on identification, protection, detection, response, and recovery are at the core of these research. Detection of an ongoing attack that escapes standard protection such as firewall, anti-virus, and host/network intrusion detection has gained importance as such attacks eventually affect the physical dynamics of the system. Therefore, anomaly detection in physical dynamics proves an effective means to implement defensein-depth. PASAD is one example of anomaly detection in the sensor/actuator data, representing such systems’ physical dynamics. We present EPASAD, which improves the detection technique used in PASAD to detect these micro-stealthy attacks, as our experiments show that PASAD’s spherical boundary-based detection fails to detect. Our method EPASAD overcomes this by using Ellipsoid boundaries, thereby tightening the boundaries in various dimensions, whereas a spherical boundary treats all dimensions equally. We validate EPASAD using the dataset produced by the TE-process simulator and the C-town datasets. The results show that EPASAD improves PASAD’s average recall by 5.8% and 9.5% for the two datasets, respectively.","tags":[],"title":"EPASAD: Ellipsoid Decision Boundary Based Process-Aware Stealthy Attack Detector","type":"publication"},{"authors":["Sumaiya Shaikh","Saurabh Kumar","Debadatta Mishra"],"categories":[],"content":"","date":1682933696,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682933696,"objectID":"a82431e8a4df310e153c184707a572f3","permalink":"https://skmtr1.github.io/publication/kalpavriksh/","publishdate":"2023-01-28T15:04:56+05:30","relpermalink":"/publication/kalpavriksh/","section":"publication","summary":"Hosting popular GUI applications in different virtual machines (VMs) in a cloud can provide strong intra-application isolation and enhance the security of end-user devices. In this context, microVMs can be a very good fit where different applications are hosted in different microVMs hosted in the cloud. However, one of the challenges for the cloud service provider is to launch the application quickly when requested by any client. Techniques like VM snapshots can be used to improve the application launch time as shown in many existing research works. In this paper, we argue that GUI applications are different from snapshot-optimized cloud services like FaaS because the GUI applications are stateful and require specialized techniques for snapshot management. To manage application snapshots in a memory-efficient manner, the proposed KalpaVriksh framework maintains a single snapshot to launch multiple GUI applications from different end users. Furthermore, the unified snapshot framework does not impact the application launch time by using intelligent snapshot creation procedures. The experimental analysis shows that KalpaVriksh snapshot techniques apart from being memory efficient, reaches the farthest point of snapshot in application execution faster than a normal application launch (by 4.9x).","tags":[],"title":"KalpaVriksh: Efficient and Cost-effective GUI Application Hosting using Singleton Snapshots","type":"publication"},{"authors":["Saurabh Kumar","Debadatta Mishra","Biswabandan Panda","Sandeep Kumar Shukla"],"categories":[],"content":"","date":1663891200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1663891200,"objectID":"83466433df30f708ea6e27d6ed332a66","permalink":"https://skmtr1.github.io/publication/inviseal/","publishdate":"2022-09-27T10:58:33+05:30","relpermalink":"/publication/inviseal/","section":"publication","summary":"With wide adaptation of open-source Android into mobile devices by different device vendors, sophisticated malware are developed to exploit security vulnerabilities. As comprehensive security analysis on physical devices are impractical and costly, emulator driven security analysis has gained popularity in recent times. Existing dynamic analysis frameworks suffer from two major issues: (i) they do not provide foolproof anti-emulation-detection measures even for fingerprint-based attacks, and (ii) lack efficient cross-layer profiling capabilities. In this work, we present InviSeal, a comprehensive and scalable dynamic analysis framework that includes low-overhead cross-layer profiling techniques and detailed anti-emulation-detection measures along with the basic emulation features. While providing an emulator-based comprehensive analysis platform, InviSeal strives to remain behind-the-scenes to avoid emulation-detection. We empirically demonstrate that the proposed OS layer profiling utility to achieve cross-layer profiling is ~1.26X faster than existing strace-based approaches. Overall, on average, InviSeal incurs ~1.04X profiling overhead in terms of the number of operations performed by the various workloads of the CaffeineMark-3.0 benchmark, which is better than the contemporary techniques. Furthermore, we measure the anti-emulation-detection strategies of InviSeal against the fingerprint-based emulation-detection attacks. Experimental results show that the emulation-detection attacks carried out by the malware samples do not find InviSeal as an emulated platform.","tags":[],"title":"InviSeal: A Stealthy Dynamic Analysis Framework for Android Systems","type":"publication"},{"authors":[],"categories":null,"content":"","date":1654083000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1654083000,"objectID":"ee044fc7bc2db2ae683147d010d23f2b","permalink":"https://skmtr1.github.io/talk/mobile-security-android-malware-analysis/","publishdate":"2022-06-02T13:22:28+05:30","relpermalink":"/talk/mobile-security-android-malware-analysis/","section":"event","summary":"","tags":[],"title":"Mobile Security: Android Malware Analysis","type":"event"},{"authors":[],"categories":null,"content":"","date":1646800200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1646800200,"objectID":"53c5271639bd3d57c97eed884b0b8575","permalink":"https://skmtr1.github.io/talk/mobile-security-android/","publishdate":"2022-03-09T13:22:28+05:30","relpermalink":"/talk/mobile-security-android/","section":"event","summary":"","tags":[],"title":"Mobile Security: Android","type":"event"},{"authors":[],"categories":null,"content":"","date":1646713800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1646713800,"objectID":"3a154f4aae9ebfe2d28778660733e29b","permalink":"https://skmtr1.github.io/talk/mobile-forensics-and-challenges/","publishdate":"2022-03-09T13:20:47+05:30","relpermalink":"/talk/mobile-forensics-and-challenges/","section":"event","summary":"","tags":[],"title":"Mobile Forensics and Challenges","type":"event"},{"authors":["Saurabh Kumar","Debadatta Mishra","Biswabandan Panda","Sandeep Kumar Shukla"],"categories":[],"content":"","date":1646352000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1646352000,"objectID":"6450fb88c33d3727586665914f46e11e","permalink":"https://skmtr1.github.io/publication/androobfs/","publishdate":"2022-03-04T10:58:33+05:30","relpermalink":"/publication/androobfs/","section":"publication","summary":"With the large-scale adaptation of Android OS and ever-increasing contributions in the Android application space, Android has become the number one target of malware writers. In recent years, a large number of automatic malware detection and classification systems have evolved to tackle the dynamic nature of malware growth using either static or dynamic analysis techniques. Performance of static malware detection methods degrade due to the obfuscation attacks. Although many benchmark datasets are available to measure the performance of malware detection and classification systems, only a single obfuscated malware dataset (PRAGuard) is available to showcase the efficacy of the existing malware detection systems against the obfuscation attacks. PRAGuard contains outdated samples till March 2013 and does not represent the latest application categories. Moreover, PRAGuard does not provide the family information for malware because of which PRAGuard can not be used to evaluate the efficacy of the malware family classification systems.  In this work, we create and release AndroOBFS, a time-tagged (at month granularity) obfuscated malware dataset with familial information spanning over three years from 2018 to 2020. We create this dataset by obfuscating 16279 unique real-world malware in six different obfuscation categories. Out of 16279 obfuscated malware samples, 14579 samples are distributed across 158 families with at least two unique malware samples in each family. We release this dataset to facilitate Android malware study towards designing robust and obfuscation resilient malware detection and classification systems.","tags":[],"title":"AndroOBFS: Time-tagged Obfuscated Android Malware Dataset with Family Information","type":"publication"},{"authors":["Arun KP","Saurabh Kumar","Debadatta Mishra","Biswabandan Panda"],"categories":[],"content":"","date":1646352000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1646352000,"objectID":"0f56e81cc2b80312a38aa1de9f24ea39","permalink":"https://skmtr1.github.io/publication/snip/","publishdate":"2022-03-04T10:58:33+05:30","relpermalink":"/publication/snip/","section":"publication","summary":"Usage of the execution stack at run-time captures the dynamic state of programs and can be used to derive useful insights into the program behaviour. The stack usage information can be used to identify and debug performance and security aspects of applications. Binary run-time instrumentation techniques are well known to capture the memory access traces during program execution. Tracing the program in entirety and filtering out stack specific accesses is a commonly used technique for stack related analysis. However, applying vanilla tracing techniques (using tools like Intel Pin) for multi-threaded programs has challenges such as identifying the stack areas to perform efficient run-time tracing. In this paper, we introduce SniP, an open-source stack tracing framework for multi-threaded programs built around Intel’s binary instrumentation tool Pin. SniP provides a framework for efficient run-time tracing of stack areas used by multi-threaded applications by identifying the stack areas dynamically. The targeted tracing capability of SniP is demonstrated using a range of multi-threaded applications to show its efficacy in terms of trace size and time to trace. Compared to full program tracing using Pin, SniP achieves up to 75X reduction in terms of trace file size and up to 24X reduction in time to trace. SniP complements existing trace based stack usage analysis tools and we demonstrate that SniP can be easily integrated with the analysis framework through different use-cases.","tags":[],"title":"SniP: An Efficient Stack Tracing Framework for Multi-threaded Programs","type":"publication"},{"authors":["Saurabh Kumar","Debadatta Mishra","Sandeep Kumar Shukla"],"categories":[],"content":"","date":1639128896,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1639128896,"objectID":"25dc7125745baa32e0b5ff5de206ca1f","permalink":"https://skmtr1.github.io/publication/mapfam/","publishdate":"2021-12-15T15:04:56+05:30","relpermalink":"/publication/mapfam/","section":"publication","summary":"With the increased popularity and wide adoption as a mobile OS platform, Android has been a major target for malware authors. Due to unprecedented rapid growth in the number, variants, and diversity of malware, detecting malware on the Android platform has become challenging. Beyond the detection of a malware, classifying the family the malware belongs to, helps security analysts to reuse malware removal techniques that is known to work for that family of malware. It takes manual analysis if a malware belongs to an unknown family. Therefore, classifying malware into exact family is important. This paper presents a technique and tool named MAPFam that applies machine learning on static features from the Manifest file and API packages to classify an Android malware into its family. This work is premised on a starting hypothesis that features extracted from API packages rather than on API calls lead to more precise classification. Our experiments indeed shows that API package based models provides ~1.63X more accurate classification compared to an API call based method. Our machine learning based malware family classification system uses API packages, requested permissions, and other features from the Manifest files. The proposed family classification system achieves accuracy and average precision above 97% for the top 60 malware families by using only 81 features with 97.55% of model reliability rate (Kappa score). The experimental results also shows that MAPFam can perfectly identity 36 malware families.","tags":[],"title":"Android Malware Family Classification: What Works -- API Calls, Permissions or API Packages?","type":"publication"},{"authors":["Saurabh Kumar","Debadatta Mishra","Biswabandan Panda","Sandeep Kumar Shukla"],"categories":[],"content":"","date":1638769901,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1638769901,"objectID":"1fa8b840178075d6b57828305bb6d3ca","permalink":"https://skmtr1.github.io/publication/deepdetect/","publishdate":"2021-12-06T11:21:41+05:30","relpermalink":"/publication/deepdetect/","section":"publication","summary":"Over the past few years, Android has become one of the most popular operating systems for smartphones as it is open-source and provides extensive support for wide variety of applications. This has led to an increase in the number of malware targeting Android devices. The lack of robust security enforcement in Play Store along with the rapid increase in the number of new Android malware presents a scope for a variety of diverse malicious applications to spread across devices. Furthermore, Android allows installation of an application from unverified sources (e.g., third-party market and sideloading), which opens up other ways for malware to infect the smartphones. This paper presents DeepDetect that enables on-device malware detection by employing a machine learning based model on static features. With effective feature engineering, DeepDetect can be used on-device. To classify an Android application as malware, it takes ∼5.32 seconds, which is 2.23X faster than API based malware detector, while consuming 0.45% (for 50 applications) of total device energy. DeepDetect provides a malware detection rate of 99.9% for known malware with a 0.01% false-positive rate. For unseen/new samples, it detects more than 97% malware with a false-positive rate of 1.73%. Further, in the presence of obfuscated malware, DeepDetect correctly detects 95.57% of malware samples. We have also evaluated our model against the Pegasus malware sample and with a new dataset after removing the potential biases across space and time.","tags":[],"title":"DeepDetect: A Practical On-device Android Malware Detector","type":"publication"},{"authors":[],"categories":null,"content":"","date":1635323400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1635323400,"objectID":"0f70c83f0fb99d53d1957434cc753b67","permalink":"https://skmtr1.github.io/talk/mobile-forensics-and-challenges-perspective-of-indian-investigators/","publishdate":"2021-11-28T13:20:47+05:30","relpermalink":"/talk/mobile-forensics-and-challenges-perspective-of-indian-investigators/","section":"event","summary":"","tags":[],"title":"Mobile Forensics and Challenges: Perspective of Indian Investigators","type":"event"},{"authors":["Saurabh Kumar","Debadatta Mishra","Biswabandan Panda","Sandeep Kumar Shukla"],"categories":[],"content":"","date":1607472000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607472000,"objectID":"0f32793077afb67625095476d38f84ed","permalink":"https://skmtr1.github.io/publication/stdneut/","publishdate":"2021-11-23T10:58:33+05:30","relpermalink":"/publication/stdneut/","section":"publication","summary":"Sophisticated malware employs various emulation-detection techniques to bypass the dynamic analysis systems that are running on top of virtualized environments. Hence, a defense mechanism needs to be incorporated in emulation based analysis platforms to mitigate the emulation-detection strategies opted by malware. In this paper, first we design an emulation-detection library that has configurable capabilities ranging from basic to advanced detection techniques like distributed detection and GPS information. We use this library to arm several existing malware with different levels of emulation-detection capabilities and study the efficacy of anti-emulation-detection measures of well known emulator driven dynamic analysis frameworks. Furthermore, we propose STDNeut (Sensor, Telephony system, and Device state information Neutralizer) -- a configurable anti-emulation-detection mechanism that defends against the basic as well as advanced emulation-detection techniques regardless of which layer of Android OS the attack is performed on. Finally, we perform various experiments to show the effectiveness of STDNeut. Experimental results show that STDNeut can effectively execute a malware without being detected as an emulated platform.","tags":[],"title":"STDNeut: Neutralizing Sensor, Telephony System and Device State Information on Emulated Android Environments","type":"publication"},{"authors":["Saurabh Kumar","Sandeep Kumar Shukla"],"categories":[],"content":"","date":1584511852,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1584511852,"objectID":"c6f66e482f1637013d865c45dda297d2","permalink":"https://skmtr1.github.io/publication/and-security/","publishdate":"2021-11-23T11:40:52+05:30","relpermalink":"/publication/and-security/","section":"publication","summary":"In today’s world of devices, smart phones, tablets, and wearable devices, are widely used for communication, photography, entertainment, monitoring health status, and many more applications. Applications installed in the smartphones provide useful services, but they may maliciously send sensitive information to a remote location for various purposes. Due to the nature of open-source ecosystem, the usage of Android platform in mobile devices has grown significantly, and the security concerns have also increased manifold. Malware and software vulnerabilities issues violated end users’ security and privacy. This article discusses and analyzes the Android architecture and platform vulnerabilities along with threat models, and malware analysis techniques followed by a few security challenges and future research directions.","tags":[],"title":"The State of Android Security","type":"publication"},{"authors":[],"categories":null,"content":"","date":1552192200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1552192200,"objectID":"9c91db9fe5395eda93cc689a4693cd2c","permalink":"https://skmtr1.github.io/talk/security-of-mobile-platforms-android-security/","publishdate":"2021-11-28T13:22:28+05:30","relpermalink":"/talk/security-of-mobile-platforms-android-security/","section":"event","summary":"","tags":[],"title":"Security of  Mobile Platforms: Android Security","type":"event"},{"authors":["Anam Fatima","Saurabh Kumar","Malay Kishore Dutta"],"categories":[],"content":"","date":1549952192,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549952192,"objectID":"345d9f44a0744cacf58e1405ee687966","permalink":"https://skmtr1.github.io/publication/host-server/","publishdate":"2021-11-23T11:46:32+05:30","relpermalink":"/publication/host-server/","section":"publication","summary":"The popularity and openness of Android have made it the easy target of malware operators acting mainly through malware-spreading apps. This requires an efficient malware detection system which can be used in mass market and is capable of mitigating zero-day threats as opposed to signature-based approach which requires regular update of database. In this paper, an efficient host-server-based malicious app detection system is presented where on-device feature extraction is performed for the app to be analyzed and extracted features are sent over to remote server where machine learning is applied for malware analysis and detection. At server-end, static features such as permissions, app components, etc., have been used to train classifier using random forest algorithm resulting in detection accuracy of more than 97%.","tags":[],"title":"Host-Server-Based Malware Detection System for Android Platforms Using Machine Learning","type":"publication"},{"authors":null,"categories":null,"content":"\rJune, 2025: One paper titled \u0026ldquo;GLAMP: Generative Learning for Adversarially-Robust Malware Prediction\u0026rdquo; is accepted at IEEE Transactions on Emerging Topics in Computing (TETC) [Q1]. Jan, 2025: One paper titled \u0026ldquo;Reinforcement-Learning Based Covert Social Influence Operations\u0026rdquo; is accepted at The Web Confrence (WWW) 2025. Jan, 2025: One paper titled \u0026ldquo;SCRUBD: Smart Contracts Reentrancy and Unhandled Exceptions Vulnerability Dataset\u0026rdquo; is accepted at MSR 2025 under Data and Tool Showcase Track. July, 2024: Joined IIT Hyderabad. Mar, 2024: Our paper titled \u0026ldquo;Climbing the Influence Tiers on TikTok: A Multimodal Study\u0026rdquo; is accepted at ICWSM 2024. May, 2023: Our paper EPASAD is accepted at Cybersecurity journal. Jan, 2023: Our paper KalpaVriksh is accepted at CCGrid 2023. Jan, 2023: Joined PostDoc at Northwestern University, USA with Prof. V.S. Subrahmanian. Dec, 2022: Defended my PhD. Sep, 2022: Our paper InveSeal is accepted at ACM Journal DTRAP. Jun, 2022: Submitted PhD Thesis. ","date":1512086400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1512086400,"objectID":"a0812ae5f3c926fea6faf4472cefc8e2","permalink":"https://skmtr1.github.io/news/","publishdate":"2017-12-01T00:00:00Z","relpermalink":"/news/","section":"","summary":"List of news.\r\n","tags":[],"title":"News","type":"page"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://skmtr1.github.io/project/example/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Example Project","type":"project"},{"authors":["Saurabh Kumar","Sandeep Kumar"],"categories":[],"content":"","date":1333952463,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1333952463,"objectID":"0c86001269b07c31d0e5015810bbd8f4","permalink":"https://skmtr1.github.io/publication/enhanced/","publishdate":"2021-11-23T11:51:03+05:30","relpermalink":"/publication/enhanced/","section":"publication","summary":"In this paper we are proposing an effective encryption technique for high volume streaming data which has been sent over various communication links throughout the network. Applications requiring high volume of streaming data transmission include audio-video conferencing or Voice over Internet Protocol (VoIP) and Internet Protocol Television (IPTV). In general, whenever we use these types of applications the emphasis is always to achieve transfer rate as high as possible between one peer node and another. As a matter of fact while taking these things into consideration security issues related to data are always overlooked and this can cause a big problem. Also, when the data is transmitted over wireless network such as MANET (Mobile Ad hoc Network), the limited wireless bandwidth and computational capability will lead to new security challenges. This paper is a solution to such security problems which are faced in case of streaming data transmission. ","tags":[],"title":"An Enhanced and Effective Encrypting Algorithm for High Volume Video Data Streaming Application on MANET","type":"publication"},{"authors":["Saurabh Kumar","Sandeep Kumar"],"categories":[],"content":"","date":1323423296,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1323423296,"objectID":"bfb37a9b726b86f5be579e120744a6ed","permalink":"https://skmtr1.github.io/publication/simulation/","publishdate":"2021-11-23T10:58:33+05:30","relpermalink":"/publication/simulation/","section":"publication","summary":"Mobile Ad Hoc network (MANET) is an autonomous system of mobile nodes connected by wireless links. Each node operates not only as an end system, but also as a router to forward packets. The nodes are free to move and organize themselves into a network. These nodes change position frequently. A routing protocol is used to find routes between mobile nodes to facilitate the communication within the network. The main goal of such a mobile ad hoc routing protocol is to establish and maintain a correct and efficient route between the pair of nodes so that they can communicate with each other. In this work an attempt has been made to compare the performance of three different routing protocols for MANETs: - AODV (Ad Hoc On-demand Distance Vector), DSR (Dynamic Source Routing), and WRP (Wireless Routing Protocol). As per our findings, the differences in the protocol mechanism lead to significant performance differentials for all of these protocols. The performance differentials are analyzed using two scenario i.e. variable pause time and variable number of nodes. We used random waypoint mobility model and uniform node placement strategy to design the network and performed simulation by using GloMoSim version 2.03 simulator. The performance analysis is based on different network metrics such as packet delivery ratio, throughput and average end-to-end delay. The results presented in this work illustrated the importance in carefully evaluating and implementing routing protocols in Mobile Ad Hoc environment.","tags":[],"title":"Simulation based Performance Comparison of AODV, DSR and WRP Routing Protocols in MANET using Random Waypoint Mobility Model","type":"publication"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"f26b5133c34eec1aa0a09390a36c2ade","permalink":"https://skmtr1.github.io/admin/config.yml","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/admin/config.yml","section":"","summary":"","tags":null,"title":"","type":"wowchemycms"}]